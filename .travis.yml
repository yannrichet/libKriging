language: shell

# Doc
# - Travis Job Lifecycle : https://docs.travis-ci.com/user/job-lifecycle/

jobs:
  include:
    - name: "Guideline checks"
      os: linux
      dist: bionic
      env:
        - BUILD_NAME="checks"

    - name: "Linux Debug"
      os: linux
      dist: bionic
      env:
        - BUILD_NAME="linux-macos"
        - MODE=Debug
        - ENABLE_PYTHON_BINDING=on
      addons:
        apt:
          packages:
            - liblapack-dev
            - python3-pip

    - name: "Linux Release"
      os: linux
      dist: bionic
      env:
        - BUILD_NAME="linux-macos"
        - MODE=Release
        - ENABLE_PYTHON_BINDING=on
      addons:
        apt:
          packages:
            - liblapack-dev
            - python3-pip

    - name: "MacOS Debug"
      os: osx
      osx_image: xcode11.3
      env:
        - BUILD_NAME="linux-macos"
        - MODE=Debug
        - ENABLE_PYTHON_BINDING=on

    - name: "Windows Debug"
      os: windows
      env:
        - BUILD_NAME="windows"
        - MODE=Debug
        - ENABLE_PYTHON_BINDING=on

#    - name: "Windows Release"
#      os: windows
#      env:
#        - BUILD_NAME="windows"
#        - MODE=Release

    - name: "Linux Coverage"
      os: linux
      dist: bionic
      env:
        - BUILD_NAME="linux-macos"
        - MODE=Debug
        - ENABLE_COVERAGE=on
        - ENABLE_OCTAVE_BINDING=on
        - ENABLE_PYTHON_BINDING=on
      addons:
        apt:
          update: true
          packages:
            - octave
            - octave-pkg-dev
            - liblapack-dev
            - lcov
            - python3-pip
              
    - name: "Linux Memcheck"
      os: linux
      dist: bionic
      env:
        - BUILD_NAME="linux-macos"
        - MODE=Debug
        - ENABLE_MEMCHECK=on
        - ENABLE_OCTAVE_BINDING=on
        - ENABLE_PYTHON_BINDING=on
      addons:
        apt:
          update: true
          packages:
            - octave
            - octave-pkg-dev
            - liblapack-dev
            - valgrind
            - python3-setuptools
            - python3-pip

#    # Disabled because too long
#    - name: "MacOS Coverage"
#      os: osx
#      osx_image: xcode9.4
#      env:
#        - BUILD_NAME="linux-macos-coverage"
#        - MODE=Coverage
#      addons:
#        homebrew:
#          update: true
#          packages:
#            - lcov

    - name: "Octave Linux"
      os: linux
      dist: bionic # bionic does not support Octave 5
      env:
        - BUILD_NAME="linux-macos"
        - ENABLE_OCTAVE_BINDING=on
        - ENABLE_PYTHON_BINDING=on
      addons:
        apt:
          packages:
            - octave
            - octave-pkg-dev
            - python3-pip

    - name: "Octave MacOS"
      os: osx
      osx_image: xcode11.3
      env:
        - BUILD_NAME="linux-macos"
        - ENABLE_OCTAVE_BINDING=on
        - ENABLE_PYTHON_BINDING=off

    - name: "Octave Windows"
      os: windows
      env:
        - BUILD_NAME="octave-windows"
        - MODE=Release
        - ENABLE_OCTAVE_BINDING=on

    - name: "R Linux"
      os: linux
      dist: bionic
      env:
        - BUILD_NAME="r-linux-macos"
        - MODE=Release
        - ENABLE_PYTHON_BINDING=on
      addons:
        apt:
          packages:
            - r-base
            - liblapack-dev
            - gfortran
            - python3-pip

    - name: "R MacOS"
      os: osx
      osx_image: xcode11.3
      env:
        - BUILD_NAME="r-linux-macos"
        - MODE=Release
        - ENABLE_PYTHON_BINDING=on
      language: r
      r: release

    - name: "R Windows"
      os: windows
      env:
        - BUILD_NAME="r-windows"
        - MODE=Release
        - ENABLE_PYTHON_BINDING=auto

install:
  - ${TRAVIS_BUILD_DIR}/.travis-ci/${BUILD_NAME}/install.sh

before_script:
  - ${TRAVIS_BUILD_DIR}/.travis-ci/${BUILD_NAME}/before_script.sh

script:
  - ${TRAVIS_BUILD_DIR}/.travis-ci/${BUILD_NAME}/build.sh
  - ${TRAVIS_BUILD_DIR}/.travis-ci/${BUILD_NAME}/test.sh

#addons:
#  artifacts:
#    debug: false
#    paths:
#      - ${HOME}/build

after_success:
  - ${TRAVIS_BUILD_DIR}/.travis-ci/${BUILD_NAME}/after_success.sh
  # pre-deploy cannot neither be in after_script which is the last script (after deploy), 
  # nor in before_deploy since the condition is checked before *deploy scripts    
  - "${TRAVIS_BUILD_DIR}/.travis-ci/release/pre-deploy.sh"
  - "[ -e ${TRAVIS_BUILD_DIR}/DEPLOY_FILE ] && export DEPLOY_FILE=$(cat ${TRAVIS_BUILD_DIR}/DEPLOY_FILE)"
  - "[ $DEBUG_CI = true ] && echo DEPLOY_FILE=$DEPLOY_FILE"

before_deploy: 
  - echo "Before deploy"

deploy:
  provider: releases
  api_key: $API_DEPLOY_TOKEN
  file: $DEPLOY_FILE
  overwrite: true
  skip_cleanup: true
  on:
    tags: true
    repo: libKriging/libKriging
    condition: $MODE = "Release" && -e $DEPLOY_FILE

# Cache update/upload is too slow and slow down the whole process
#cache:
#  directories:
#  - bindings/R/Rlibs
#  - $HOME/Miniconda3
#  - /c/Rtools

env:
  global: 
    - DEBUG_CI=true